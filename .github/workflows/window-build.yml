name: ZEngine Window Build

on:
  push:
    branches: [ master, develop ]
  pull_request:
    branches: [ master, develop ]

env:
  PROJECT_ROOT_DIR: .
  OUTPUT_BUILD_DIR: .\out\build
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  # BUILD_TYPE: Release

jobs:
  Windows-Build:
    # The CMake configure and build commands are platform agnostic and should work equally
    # well on Windows or Mac.  You can convert this to a matrix build if you need
    # cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: windows-latest
    strategy:
      matrix:
          buildSystem: [Windows]
          buildConfiguration: [Debug, Release]

    steps:
    - name: check out repository
      uses: actions/checkout@v2
    - name: Checkout submodules
      run: git submodule update --init --recursive

    - name: Setup cmake
      uses: jwlawson/actions-setup-cmake@v1.9
      with:
        cmake-version: '3.20.x'
    - name: Use cmake
      run: cmake --version

    - name: Clean up  build dir
      run: rm ${{env.OUTPUT_BUILD_DIR}} -Recurse -Force
      shell: pwsh
      
    - name: Configure CMake
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: cmake -S ${{env.PROJECT_ROOT_DIR}} -B ${{env.OUTPUT_BUILD_DIR}} -G "Visual Studio 16 2019" -A x64 -DSDL_STATIC=$SDL_STATIC -DSDL_SHARED=$SDL_SHARED -DSPDLOG_BUILD_SHARED=$SPDLOG_BUILD_SHARED -DBUILD_STATIC_LIBS=$BUILD_STATIC_LIBS
      env:
        SDL_STATIC: ON
        SDL_SHARED: OFF
        SPDLOG_BUILD_SHARED: OFF
        BUILD_STATIC_LIBS: ON
      shell: pwsh

    - name: Cmake Build
      # Build your program with the given configuration
      run: cmake --build ${{env.OUTPUT_BUILD_DIR}} --config ${{matrix.buildConfiguration}}
      shell: pwsh
