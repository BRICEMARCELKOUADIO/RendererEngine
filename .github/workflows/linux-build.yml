name: ZEngine Linux Build

on:
  push:
    branches: [ master, develop ]
  pull_request:
    branches: [ master, develop ]

env:
  PROJECT_ROOT_DIR: .
  OUTPUT_BUILD_DIR: .\out\build

jobs:
  Linux-Build:
    runs-on: ubuntu-18.04	
    strategy:
      matrix:
          buildSystem: [Linux]
          buildPlatform: [x64]
          buildConfiguration: [Release]

    steps:      
    - name: Checkout repository
      uses: actions/checkout@v2
      
    - name: Checkout submodules
      run: git submodule update --init --recursive

    - name: Install SDL2 Library
      run: sudo apt-get install libsdl2-dev

    - name: Install CMake
      uses: jwlawson/actions-setup-cmake@v1.9
      with:
        cmake-version: '3.20.x'

    - name: Install pre-requisite packages.
      run: sudo apt-get install -y wget apt-transport-https software-properties-common

    - name: Download the Microsoft repository GPG keys
      run: wget -q https://packages.microsoft.com/config/ubuntu/18.04/packages-microsoft-prod.deb

    - name: Register the Microsoft repository GPG keys
      run: sudo dpkg -i packages-microsoft-prod.deb

    - name: Update the list of packages after we added packages.microsoft.com
      run: sudo apt-get update

    - name: Install PowerShell
      run: sudo apt-get install -y powershell

    - name: Install Clang Compiler
      uses: egor-tensin/setup-clang@v1
      with:
        version: 7
        platform: x64

    - name: Define Clang-7 as default C compiler
      run: export CC=/usr/bin/clang-7

    - name: Define Clang++-7 as default C++ compiler
      run: export CXX=/usr/bin/clang++-7
      
    - name: Configure CMake
      run: cmake -S ${{env.PROJECT_ROOT_DIR}} -B ${{env.OUTPUT_BUILD_DIR}} -DCMAKE_SYSTEM_NAME=${{matrix.buildSystem}} -DCMAKE_BUILD_TYPE=${{matrix.buildConfiguration}} -DSDL_STATIC=ON -DSDL_SHARED=OFF -DSPDLOG_BUILD_SHARED=OFF -DBUILD_STATIC_LIBS=ON -DSPDLOG_FMT_EXTERNAL=ON -DSPDLOG_FMT_EXTERNAL_HO=OFF
      shell: pwsh

    - name: CMake Build
      run: cmake --build ${{env.OUTPUT_BUILD_DIR}} --config ${{matrix.buildConfiguration}}
      shell: pwsh
